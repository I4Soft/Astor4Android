#Project identifier (optional)
projectIdentifier=
#mode: statement | statement-remove
mode=statement
#Dir for the output from Mutation and evolution
workingDirectory=./outputMutation/
#Java compliance Level
javacompliancelevel=8
alternativecompliancelevel=4
#
regressionforfaultlocalization=true
#
#Evolutionary Parameters
#
#Package that gZoltar instruments, that means, It only considers suspicious statements from classes included in that package.
packageToInstrument=
#Max number of generation executed
maxGeneration=600
# Size of the population (number of variants for generation )
population=5
#Mechanism to validate a program variant i.e., execute the test cases. It can be 1) process (Astor launches a process for the test)|2)thread (Astor launches a thread for the test) |3) local (Astor executes the test in the current thread)
validation=process
#applyCrossover
applyCrossover=false
#Execute regression
forceExecuteRegression=false
#Fault localization threshold.  
flthreshold=0.1
#
#Max number of suspicious analyzed 
maxsuspcandidates=1000
##PopulationConformation
reintroduce=PARENTS
#Time for evaluation the failing test cases (in milliseconds):
tmax1=120000
#Time for evaluation the test suite i.e., regression testing (in milliseconds):
tmax2=960000
#
stopfirst=false
#
allpoints=false
#
savesolution=true
#
saveall=false
#
multipointmodification=false
#
maxtime=120
#
testbystep=false
#
scope=package
#
resetoperations=false
#inorder, random, weight,sequence
modificationpointnavigation=weight
#
mutationrate=1 
#
probagenmutation=false
#
uniqueoptogen=false
#
srcjavafolder=src/main/java
srctestfolder=src/test/java
#
binjavafolder=/target/classes
bintestfolder=/target/test-classes
#
resourcesfolder=/src/main/resources:/src/test/resources:
#
# Gzoltar configuration
## working directory for Gzoltar 
location=/tmp
#Faul localization class [MODIFIED]
faultlocalization=br.ufg.inf.astorworker.faultlocalization.AndroidFaultLocalization
#
fitnessfunction=fr.inria.astor.core.loop.population.TestCaseFitnessFunction
#
populationcontroller=fr.inria.astor.core.loop.population.TestCaseBasedFitnessPopulationController
#
compiler=fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
#Evosuite jar
evosuitejar=./lib/evosuite-master-1.0.4-SNAPSHOT.jar
#./lib/evosuite-1.0.3.jar
evosuiteresultfolder=evosuite

###Properties for automatic execution of 
bugId=280
numberExecutions=1
###Properties for mutation testing
elementsToMutate=10
###test cases to Ignore (separated using File.pathSeparator (': in Unix/Linux/Solaris), please, replace it by ';' if you use Windows)
ignoredTestCases=
###org.apache.commons.math.ode.nonstiff:org.apache.commons.math.ode2.nonstiff:org.apache.commons.lang.LocaleUtilsTest
###prefix of program variant folder name
pvariantfoldername=variant-

##CONFIGURATION FILE#
#Folders with version of programs:
version-location=./math-version/
#Maven Repo location
pathToMVNRepository=
#Trunk Process command: print the first 'commandTrunk'. Put 0 to not trunk the command
commandTrunk=50000
#Use fault localization to reduce the number or suspicious, or all statement are uniformly suspicious
skipfaultlocalization=false
ignoreflakyinfl=false
#EvoSuite in seconds
evosuitetimeout=120
#
evo_buggy_class=true
#
evo_affected_by_op=true
#Default Version of jUnit used as default by astor.
lastJUnitVersion=./examples/libs/junit-4.11.jar
#Apply DSE to evosuite
evoDSE=false
#True ES is computed over the original (i.e., not modified) class or over the patched
evoRunOnBuggyClass=true
#
learningdir=
#
clonegranularity=types
#
clusteringfilename=clustering.csv
#
transformingredient=false
#Timezone
timezone=America/Los_Angeles
#Filter FL
filterfaultlocalization=true
#
manipulatesuper=false
#
maxVarCombination=1000